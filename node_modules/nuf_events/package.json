{
  "_args": [
    [
      {
        "raw": "/home/mfy/glory_rat/Node.js/nuf_node_modules/nuf_events",
        "scope": null,
        "escapedName": null,
        "name": null,
        "rawSpec": "/home/mfy/glory_rat/Node.js/nuf_node_modules/nuf_events",
        "spec": "/home/mfy/glory_rat/Node.js/nuf_node_modules/nuf_events",
        "type": "directory"
      },
      "/home/mfy/glory_rat/Node.js/voipDemoPTT/node_modules"
    ]
  ],
  "_from": "../nuf_node_modules/nuf_events",
  "_id": "nuf_events@1.0.0",
  "_inCache": true,
  "_location": "/nuf_events",
  "_phantomChildren": {},
  "_requested": {
    "raw": "/home/mfy/glory_rat/Node.js/nuf_node_modules/nuf_events",
    "scope": null,
    "escapedName": null,
    "name": null,
    "rawSpec": "/home/mfy/glory_rat/Node.js/nuf_node_modules/nuf_events",
    "spec": "/home/mfy/glory_rat/Node.js/nuf_node_modules/nuf_events",
    "type": "directory"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "file:../nuf_node_modules/nuf_events",
  "_shasum": "e285028ced5cf7bf3cd84ab33bb68a9ca8da9b84",
  "_shrinkwrap": null,
  "_spec": "/home/mfy/glory_rat/Node.js/nuf_node_modules/nuf_events",
  "_where": "/home/mfy/glory_rat/Node.js/voipDemoPTT/node_modules",
  "author": {
    "name": "nuf"
  },
  "dependencies": {},
  "description": "adds event handler to objects",
  "devDependencies": {},
  "keywords": [
    "event",
    "eventhandler",
    "eventbroadcaster",
    "on"
  ],
  "license": "ISC",
  "main": "index.js",
  "name": "nuf_events",
  "optionalDependencies": {},
  "readme": "\nadds events and event broadcasting to objects\n\nusage:\n\tvar \n\t\tEvents = require(\"nuf_events\"),\n\t\ttestObject = {},\n\t\teventData = {\n\t\t\t\"testString\":\"this is a test string\",\n\t\t\t\"number\": 123456\n\t\t}\n\t;\n\tlog(\"starting test\");\n\tEvents.addEventEmitter(testObject);\n\ttestObject.on(\n\t\t\"testEvent\",\n\t\tfunction(event){\n\t\t\tlog(\n\t\t\t\t\"Received event on testObject, \\n\"+\n\t\t\t\t\"Event:\\n\"+JSON.stringify(event, undefined, \"\\t\")\n\t\t\t);\n\t\t\t// output\n\t\t\t// ----------- nuf_event test -----------\n\t\t\t// \tReceived event on testObject, \n\t\t\t// \tEvent:\n\t\t\t// \t{\n\t\t\t// \t\t\"type\": \"testEvent\",\n\t\t\t// \t\t\"data\": {\n\t\t\t//\t \t\t\"testString\": \"this is a test string\",\n\t\t\t// \t\t\t\"number\": 123456\n\t\t\t//\t\t}\n\t\t\t// \t}\n\n\n\t\t}\n\t);\n\ttestObject.on(\n\t\t\"eventDispatched\",\n\t\tfunction(event){\n\t\t\tlog(\"received eventDispatched:\"+\"Event:\\n\"+JSON.stringify(event, undefined, \"\\t\"));\n\t\t}\n\t\t// output:\n\t\t// \t----------- nuf_event test -----------\n\t\t// \treceived eventDispatched:Event:\n\t\t// \t{\n\t\t// \t\t\"type\": \"testEvent\",\n\t\t// \t\t\"data\": {\n\t\t// \t\t\t\"testString\": \"this is a test string\",\n\t\t// \t\t\t\"number\": 123456\n\t\t// \t\t}\n\t\t// \t}\n\t);\n\ttestObject.on.emitEvent(\"testEvent\", eventData);\n",
  "readmeFilename": "README.md",
  "scripts": {},
  "version": "1.0.0"
}
